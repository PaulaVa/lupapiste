// Support for miscellaneous inputs and other stuff.
// See also _forms.scss.

@mixin input-fields() {
  padding: 0 $marginM;
  box-sizing: border-box;
  min-height: $grid-input-height;
  height: $grid-input-height;
  font-size: $grid-font-size;
  color: $input-color;
  border: 1px solid $input-border-color;
  -webkit-appearance: none;
  -webkit-border-radius: 0px;
  -moz-appearance:none;

  &:focus {
    color: $input-focus-color;
    border-color: $input-focus-border-color;
  }
  &:disabled {
    border-color: $input-disabled-border-color;
    background-color: $input-disabled-background-color;
  }
}

@mixin hide-radio-check-input ($display: inherit) {
  input[type=checkbox], input[type=radio] {
    display: $display;
    opacity: 0;
    width: 0;
    height: 0;
    margin: 0;
    position: absolute;
    font-size: 0;
  }
}


// Defines the following classes:
// .cls-label
// .cls-wrapper
// and the definition
// .cls-wrapper.wrapper--disabled
@mixin toggle-helper ($cls, $on, $off,
                      $size: $lupicon-size,
                      $color: $input-color,
                      $icon: $checkbox-color,
                      $hover: $checkbox-hover-color,
                      $selected: $checkbox-selected-color,
                      $disabled: $input-select-disabled-icon,
                      $border: $checkbox-border-color,
                      $disabled-bg: $input-disabled-background-color,
                      $wrapper-display: inherit,
                      $input-display: block,
                      $label-display: inline-block) {
  label.#{$cls}-label {
  width: 100%;
  display: $label-display;
  color: $color;
  padding: {
    left: 7px;
    right: 7px;
    bottom: 7px;
    top: 7px;
  }
}
  .#{$cls}-label:before {
    @include lupicon-font( $size );
    content: $off;
    display: inline-block;
    margin-right: 10px;
    vertical-align: top;
    color: $icon;
    cursor: pointer;
  }

  .#{$cls}-label:hover.#{$cls}-label:before,
  input:checked + .#{$cls}-label:hover.#{$cls}-label:before {
    color: $hover;
  }

  input:checked + .#{$cls}-label:before {
    @include lupicon-font($size);
    content: $on;
    color: $selected;
  }

  input:disabled + .#{$cls}-label:before,
  input:disabled + .#{$cls}-label:hover.#{$cls}-label:before{
    cursor: initial;
    color: $disabled;
  }

  .#{$cls}-wrapper {
    display: $wrapper-display;
    box-sizing: border-box;
    border: 1px solid $border;
    @include hide-radio-check-input ($input-display);
}

  .#{$cls}-wrapper.wrapper--disabled {
    background-color: $disabled-bg;
}
}

@include toggle-helper ( arrow, "\e614", "\e611" ) {}

// Checkboxes
@include toggle-helper ( checkbox, "\e604", "\e603" ) {}
@include toggle-helper ( docgen-checkbox, "\e604", "\e603", $wrapper-display: block ) {}
.docgen-checkbox-wrapper.form-input {
  height: auto;
  width: auto;
}
@include toggle-helper ( sectionbox, "\e61d", "\e620" ) {}

@include toggle-helper ( stampbox, "\e61e", "\e620", $selected: white ) {}
.stampbox-wrapper {
  border: none;
}

// Radio buttons
@include toggle-helper (radio, "\e635", "\e634", $wrapper-display: inline-block, $input-display: block) {}

// Radio field component. In order to make sure that the components are adjacent without
// gaps, some adjustments are needed.
@include toggle-helper (radio-field, "\e635", "\e634", $wrapper-display: inline,
                        $input-display: inline-block, $label-display: inline) {}
.radio-field-wrapper {
  padding: 7px 7px 7px 7px;
}

// Wrapper helpers
.wrapper--break {
  margin-bottom: $marginL;
}

.wrapper--break-small {
  margin-bottom: $marginS;
}

.wrapper--block {

}


// Attachment filters related
@include toggle-helper ( filter, "\e604", "\e603", $wrapper-display: inline-block, $input-display: block ) {}

.filter-group {
  border: 1px solid $gray187;
  padding: {
    top: 7px;
    left: 7px;
    right: 7px;
    bottom: 14px;
  }
  margin-bottom: 1em;
  .filter-group__state {
    i {
      cursor: pointer;
      color: $primary;
    }
    span {
      text-transform: uppercase;
    }
    &:hover > i {
      color: $checkbox-hover-color;
    }
  }
  .filter-group__toggles {
    margin-left: 2px;
    margin-top: $marginS;
  }
}


.button-input {
  white-space: nowrap;
  input, button {
    vertical-align: middle;
  }
  input {
    // Forcefully override the .form-grid styles.
    width: 50% !important;
    -webkit-appearance: textfield !important;
  }
}

input[type=text].textinput {
  box-sizing: border-box;
  padding: 4px;
  display: block;
  &:focus {
    border-color: $input-focus-border-color;
  }
}

.textinput.textinput--big {
  @include btn-height;
  line-height: 1;
  font-size: $font-size;
}

input.dateinput {
  @include input-fields;
  background-image: url("/lp-static/img/calendar-orange-dark.png");
  background-position: right 4px center;
  background-repeat: no-repeat;
  padding-right: 34px;
  width: initial;
  &:focus {
    background-image: url("/lp-static/img/calendar-orange-light.png");
  }
  &:disabled {
    background-image: url("/lp-static/img/calendar-gray187.png");
    color: $input-select-disabled-icon;
    background-repeat: no-repeat;
    background-position: right 4px center;
    padding-right: 34px;
  }
}

.form-grid input.tip.dateinput,
input.tip.dateinput {
  background-image: url("/lp-static/img/calendar-orange.png");
  border-color: $orange-dark;
  &:focus {
    border-color: $input-focus-border-color;
    background-image: url("/lp-static/img/calendar-orange-light.png");
  }
  &:disabled {
    border-color: $input-disabled-border-color;
    background-image: url("/lp-static/img/calendar-gray187.png");
    color: $input-select-disabled-icon
  }
}

input.dateinput.dateinput--small {
  height: 26px;
  background-image: url("/lp-static/img/calendar-12-orange-dark.png");
  min-height: initial;
  font-size: 0.875em;
  &:focus {
    background-image: url("/lp-static/img/calendar-12-orange-light.png");
  }
  &:disabled {
    background-image: url("/lp-static/img/calendar-12-gray187.png");
  }
}

.form-grid input.tip.dateinput.dateinput--small,
input.tip.dateinput.dateinput--small {
  background-image: url("/lp-static/img/calendar-12-orange.png");
  &:focus {
    background-image: url("/lp-static/img/calendar-12-orange-light.png");
  }
  &:disabled {
    background-image: url("/lp-static/img/calendar-12-gray187.png");
  }
}



input.grid-style-input {
  @include input-fields;
}

input.grid-style-input--wide {
  @include input-fields;
  width: 100%;
}

@mixin input-and-button( $cls, $padding: 8px, $input-width: 20em) {
  $height: $font-size + 2 * $padding;
  .#{$cls} {
    display: table;
    white-space: nowrap;
    > .#{$cls}--input {
      display: table-cell;
      line-height: $height;
      height: $height;
      min-height: $height;
      max-height: $height;
    }
    > input.#{$cls}--input {
      width: $input-width;
      vertical-align: middle;
      padding-right: 4px;
  }
  > button.#{$cls}--input {
    padding: {
      left: $padding;
      right: $padding;
    }
  }
}
}

.drop-zone--highlight {
  border: 4px dashed $primary !important;
}
